service: vivares-lambda
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  timeout: 30
  environment:
    STAGE: ${opt:stage, 'local'}
    NODE_OPTIONS: --enable-source-maps
    MONGO_URI: ${ssm:/vivares/dev/MONGO_URI}
    JWT_SECRET: ${ssm:/vivares/dev/JWT_SECRET}
    EMAIL_USER: ${ssm:/vivares/dev/EMAIL_USER}
    EMAIL_PASSWORD: ${ssm:/vivares/dev/EMAIL_PASSWORD}
    AWS_BUCKET_NAME: ${ssm:/vivares/dev/AWS_BUCKET_NAME}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - "arn:aws:logs:*:*:*"
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
            - ssm:GetParametersByPath
            - ssm:DescribeParameters
          Resource:
            - "arn:aws:ssm:${self:provider.region}:*:parameter/vivares/*"
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource:
            - "arn:aws:s3:::${self:provider.environment.AWS_BUCKET_NAME}/*"

functions:
  # Auth Functions
  requestCode:
    handler: handler.requestCode
    events:
      - http:
          path: auth/request-code
          method: ANY
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  verifyCode:
    handler: handler.verifyCode
    events:
      - http:
          path: auth/verify-code
          method: ANY
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updateUserName:
    handler: handler.updateUserName
    events:
      - http:
          path: auth/update-name
          method: ANY
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getUsers:
    handler: handler.getUsers
    events:
      - http:
          path: auth/users
          method: ANY
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getUser:
    handler: handler.getUser
    events:
      - http:
          path: auth/users/{id}
          method: ANY
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getUserProfile:
    handler: handler.getUserProfile
    events:
      - http:
          path: auth/profile
          method: ANY
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  toggleUserAdmin:
    handler: handler.toggleUserAdmin
    events:
      - http:
          path: auth/users/{id}/toggle-admin
          method: PATCH
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true

  # Places Functions
  uploadPlaceImage:
    handler: handler.uploadPlaceImage
    events:
      - http:
          path: places/upload-image
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  createPlace:
    handler: handler.createPlace
    events:
      - http:
          path: places
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getPlaces:
    handler: handler.getPlaces
    events:
      - http:
          path: places
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getPlace:
    handler: handler.getPlace
    events:
      - http:
          path: places/{id}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getPlacesByCondominium:
    handler: handler.getPlacesByCondominium
    events:
      - http:
          path: places/condominium/{id}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updatePlace:
    handler: handler.updatePlace
    events:
      - http:
          path: places/{id}
          method: PUT
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  deletePlace:
    handler: handler.deletePlace
    events:
      - http:
          path: places/{id}
          method: DELETE
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true

  # Books Functions
  createBook:
    handler: handler.createBook
    events:
      - http:
          path: books
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getBooks:
    handler: handler.getBooks
    events:
      - http:
          path: books
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getBook:
    handler: handler.getBook
    events:
      - http:
          path: books/{id}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getBooksByUserId:
    handler: handler.getBooksByUserId
    events:
      - http:
          path: books/user/{userId}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getBooksByCondominiumId:
    handler: handler.getBooksByCondominiumId
    events:
      - http:
          path: books/condominium/{condominiumId}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updateBook:
    handler: handler.updateBook
    events:
      - http:
          path: books/{id}
          method: PUT
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  deleteBook:
    handler: handler.deleteBook
    events:
      - http:
          path: books/{id}
          method: DELETE
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updateBookStatus:
    handler: handler.updateBookStatus
    events:
      - http:
          path: books/{id}/status
          method: PATCH
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  checkPlaceAvailability:
    handler: handler.checkPlaceAvailability
    events:
      - http:
          path: books/availability
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true

  # Posts Functions
  uploadPostImage:
    handler: handler.uploadPostImage
    events:
      - http:
          path: posts/upload-image
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  createPost:
    handler: handler.createPost
    events:
      - http:
          path: posts
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getPosts:
    handler: handler.getPosts
    events:
      - http:
          path: posts
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getPost:
    handler: handler.getPost
    events:
      - http:
          path: posts/{id}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updatePost:
    handler: handler.updatePost
    events:
      - http:
          path: posts/{id}
          method: PUT
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  deletePost:
    handler: handler.deletePost
    events:
      - http:
          path: posts/{id}
          method: DELETE
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true

  # Condominium Functions
  createCondominium:
    handler: handler.createCondominium
    events:
      - http:
          path: condominiums
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getCondominiums:
    handler: handler.getCondominiums
    events:
      - http:
          path: condominiums
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getCondominium:
    handler: handler.getCondominium
    events:
      - http:
          path: condominiums/{id}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updateCondominium:
    handler: handler.updateCondominium
    events:
      - http:
          path: condominiums/{id}
          method: PUT
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  deleteCondominium:
    handler: handler.deleteCondominium
    events:
      - http:
          path: condominiums/{id}
          method: DELETE
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getCondominiumApartments:
    handler: handler.getCondominiumApartments
    events:
      - http:
          path: condominiums/{id}/apartments
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true

  # Apartment Functions
  createApartment:
    handler: handler.createApartment
    events:
      - http:
          path: apartments
          method: POST
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getApartments:
    handler: handler.getApartments
    events:
      - http:
          path: apartments
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getApartment:
    handler: handler.getApartment
    events:
      - http:
          path: apartments/{id}
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  updateApartment:
    handler: handler.updateApartment
    events:
      - http:
          path: apartments/{id}
          method: PUT
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  deleteApartment:
    handler: handler.deleteApartment
    events:
      - http:
          path: apartments/{id}
          method: DELETE
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true
  getUserApartments:
    handler: handler.getUserApartments
    events:
      - http:
          path: users/{userId}/apartments
          method: GET
          cors:
            origin: ${self:custom.cors.origin.${opt:stage, 'local'}}
            headers:
              - Content-Type
              - Token
              - token
              - Authorization
              - X-Amz-Date
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Methods
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: true

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true
  cors:
    origin:
      local: 'http://localhost:3001'
      dev: 'https://vivares-web.vercel.app'
